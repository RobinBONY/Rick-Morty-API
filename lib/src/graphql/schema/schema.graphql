# .lib/src/grapql/schema/schema.graphql

type Query {
  characters(page: Int!): Characters
  episodes(filter: FilterEpisode!): Episodes
  locations(page: Int!): Locations
}

scalar ID

type Character {
    id: ID
    name: String
    status: String
    species: String
    type: String
    gender: String
    origin: Location
    location: Location
    image: String
    episode: [Episode]!
    created: String
}

scalar String

type Location {
    id: ID
    name: String
    type: String
    dimension: String
    residents: [Character]!
    created: String
}

type Episode {
    id: ID
    name: String
    air_date: String
    episode: String
    characters: [Character]!
    created: String
}

scalar Int

input FilterCharacter {
    name: String
    status: String
    species: String
    type: String
    gender: String
}

type Characters {
    info: Info
    results: [Character]
}

type Info {
    count: Int
    pages: Int
    next: Int
    prev: Int
}

input FilterLocation {
    name: String
    type: String
    dimension: String
}

type Locations {
    info: Info
    results: [Location]
}

input FilterEpisode {
    name: String
    episode: String
}

type Episodes {
    info: Info
    results: [Episode]
}

scalar Boolean